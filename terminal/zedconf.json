// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)

{
  // cursed AI
  "features": { "edit_prediction_provider": "none" },

  // Ui
  "icon_theme": "Material Icon Theme",
  "ui_font_size": 16,
  "buffer_font_size": 15,
  "ui_font_family": "JetBrainsMono Nerd Font",
  "buffer_font_family": "JetBrainsMono Nerd Font",
  "buffer_font_weight": 500,
  "ui_font_weight": 400,
  "scrollbar": {
    "show": "never"
  },
  "use_multiline_find": true,
  "vertical_scroll_margin": 20,
  "current_line_highlight": "gutter",
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false
  },
  "tabs": {
    "file_icons": true,
    "git_status": true,
    "show_diagnostics": "all"
  },

  "toolbar": {
    "breadcrumbs": false,
    "quick_actions": false,
    "selections_menu": true,
    "agent_review": true,
    "code_actions": true
  },

  "gutter": {
    "line_numbers": true
  },

  "terminal": {
    "copy_on_select": true,
    "font_family": "JetBrainsMono Nerd Font",
    "font_features": {
      "calt": true
    },
    "shell": {
      "program": "fish"
    },
    "detect_venv": {
      "on": {
        // Default directories to search for virtual environments, relative
        // to the current working directory. We recommend overriding this
        // in your project's settings, rather than globally.
        "directories": [".env", "env", ".venv", "venv"],
        // Can also be `csh`, `fish`, and `nushell`
        "activate_script": "fish"
      }
    },
    "toolbar": {
      "breadcrumbs": false
    },
    "dock": "right",
    "default_width": 610
  },

  // Vim mode
  "vim_mode": true,
  "relative_line_numbers": true,
  "autosave": "on_focus_change",
  "format_on_save": "on",

  "theme": {
    "mode": "system",
    "light": "Catppuccin Macchiato",
    "dark": "Catppuccin Macchiato"
  },

  // Extensions
  "auto_install_extensions": {
    "html": true,
    "dockerfile": true,
    "catppuccin": true,
    "ruff": true,
    "sql": true,
    "toml": true,
    "codebook": true,
    "git-firefly": true
  },

  // Language server
  "inlay_hints": {
    "enabled": true,
    "show_type_hints": true,
    "show_parameter_hints": true,
    "show_other_hints": true
  },

  // // python ruff and lsp
  "languages": {
    "Python": {
      // "language_servers": ["!pyright", "ruff"],
      "language_servers": ["ruff", "pyright"], // "pylsp"],
      "formatter": [
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ]
    }
  },

  "lsp": {
    "ruff": {
      "initialization_options": {
        "settings": {
          // Ruff server settings goes here
          "configurationPreference": "filesystemFirst",
          "lineLength": 79,
          "lint": {
            "extendSelect": ["I"]
          }
          //
        }
      }
    }
  }

  // "lsp": {
  //   "ruff": {
  //     "initialization_options": {
  //       "settings": {
  //         // Ruff server settings goes here
  //         "configurationPreference": "filesystemFirst",
  //         "exclude": ["**/tests/**"],
  //         "lineLength": 80,

  //         "configuration": {
  //           "lint": {
  //             "unfixable": ["F401"],
  //             "extend-select": ["TID251"],
  //             "flake8-tidy-imports": {
  //               "banned-api": {
  //                 "typing.TypedDict": {
  //                   "msg": "Use `typing_extensions.TypedDict` instead"
  //                 }
  //               }
  //             }
  //           },
  //           "format": {
  //             "quote-style": "single"
  //           }
  //         }
  //       }
  //     }
  //   }
  // }
}
